const mysql = require('mysql2/promise')

async function checkActivityStructure() {
  let connection
  
  try {
    // Configuration de la base de donn√©es
    const dbConfig = {
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || 'Hadouachi20@',
      database: process.env.DB_NAME || 'association_el_bsf',
      port: process.env.DB_PORT || 3306
    }
    
    console.log('üîå Connexion √† la base de donn√©es...')
    connection = await mysql.createConnection(dbConfig)
    console.log('‚úÖ Connexion r√©ussie !')
    
    // V√©rifier la structure de la table Activity
    console.log('\nüîç Structure de la table Activity:')
    const [describeResult] = await connection.execute('DESCRIBE Activity')
    describeResult.forEach(column => {
      console.log(`   - ${column.Field}: ${column.Type} ${column.Null === 'YES' ? '(nullable)' : '(not null)'}`)
    })
    
    // V√©rifier l'activit√© "Champion Akhachab Amghar"
    console.log('\nüîç Recherche de l\'activit√© "Champion Akhachab Amghar"...')
    const [activities] = await connection.execute(
      'SELECT * FROM Activity WHERE title LIKE ?',
      ['%Champion Akhachab Amghar%']
    )
    
    if (activities.length === 0) {
      console.log('‚ùå Aucune activit√© trouv√©e avec ce titre')
      return
    }
    
    const targetActivity = activities[0]
    console.log(`üìä Activit√© trouv√©e:`)
    console.log(`   - ID: ${targetActivity.id}`)
    console.log(`   - Titre: ${targetActivity.title}`)
    
    // Afficher toutes les colonnes de cette activit√©
    console.log('\nüìã Toutes les colonnes de cette activit√©:')
    Object.keys(targetActivity).forEach(key => {
      const value = targetActivity[key]
      if (value && typeof value === 'string' && value.length > 100) {
        console.log(`   - ${key}: ${value.substring(0, 100)}... (longueur: ${value.length})`)
      } else {
        console.log(`   - ${key}: ${value}`)
      }
    })
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification :', error)
    process.exit(1)
  } finally {
    if (connection) {
      await connection.end()
      console.log('\nüîå Connexion ferm√©e.')
    }
  }
}

// Ex√©cuter la v√©rification si le script est appel√© directement
if (require.main === module) {
  checkActivityStructure()
}

module.exports = checkActivityStructure





