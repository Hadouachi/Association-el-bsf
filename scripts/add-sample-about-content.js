const mysql = require('mysql2/promise')

async function addSampleAboutContent() {
  let connection
  try {
    const dbConfig = {
      host: 'localhost',
      user: 'root',
      password: 'Hadouachi20@',
      database: 'association_el_bsf'
    }

    connection = await mysql.createConnection(dbConfig)
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie')

    // Contenu d'exemple
    const sampleContent = [
      {
        id: 'about-1',
        type: 'ANNOUNCEMENT',
        title: 'Nouvelle session de m√©morisation du Coran',
        content: 'Nous sommes ravis d\'annoncer l\'ouverture d\'une nouvelle session de m√©morisation du Coran pour les enfants de 8 √† 12 ans. Cette session d√©butera le 15 janvier 2025 et se d√©roulera tous les samedis de 9h √† 11h.',
        images: JSON.stringify([
          {
            src: '/images/about/quran-memorization.jpg',
            alt: 'Enfants en train de m√©moriser le Coran',
            caption: 'Session de m√©morisation en cours'
          }
        ]),
        videos: null,
        order: 1,
        isPublished: true
      },
      {
        id: 'about-2',
        type: 'WORK_PROJECT',
        title: 'R√©novation de la salle de pri√®re',
        content: 'Nous avons termin√© avec succ√®s la r√©novation compl√®te de notre salle de pri√®re principale. Ce projet a dur√© 3 mois et a √©t√© financ√© par les dons de notre communaut√©. La nouvelle salle peut accueillir jusqu\'√† 200 fid√®les.',
        images: JSON.stringify([
          {
            src: '/images/about/prayer-room-before.jpg',
            alt: 'Salle de pri√®re avant r√©novation',
            caption: '√âtat initial de la salle'
          },
          {
            src: '/images/about/prayer-room-after.jpg',
            alt: 'Salle de pri√®re apr√®s r√©novation',
            caption: 'Nouvelle salle r√©nov√©e'
          }
        ]),
        videos: null,
        order: 2,
        isPublished: true
      },
      {
        id: 'about-3',
        type: 'INFORMATION',
        title: 'Horaires des cours d\'arabe',
        content: 'Nos cours d\'arabe pour adultes et enfants sont maintenant disponibles. Les cours se d√©roulent en petits groupes de 5 √† 8 personnes pour assurer un suivi personnalis√©.',
        images: null,
        videos: null,
        order: 3,
        isPublished: true
      },
      {
        id: 'about-4',
        type: 'MILESTONE',
        title: '100√®me √©tudiant dipl√¥m√©',
        content: 'Nous c√©l√©brons aujourd\'hui un moment historique : notre 100√®me √©tudiant a termin√© avec succ√®s le programme complet de m√©morisation du Coran. Cette r√©ussite t√©moigne de l\'engagement de notre √©quipe p√©dagogique et de la d√©termination de nos √©tudiants.',
        images: JSON.stringify([
          {
            src: '/images/about/graduation-ceremony.jpg',
            alt: 'C√©r√©monie de remise des dipl√¥mes',
            caption: 'C√©r√©monie de remise des dipl√¥mes 2024'
          }
        ]),
        videos: null,
        order: 4,
        isPublished: true
      },
      {
        id: 'about-5',
        type: 'PARTNERSHIP',
        title: 'Partenariat avec l\'√©cole islamique Al-Nour',
        content: 'Nous sommes fiers d\'annoncer un nouveau partenariat avec l\'√©cole islamique Al-Nour. Cette collaboration nous permettra d\'√©largir nos programmes √©ducatifs et d\'offrir plus d\'opportunit√©s √† nos √©tudiants.',
        images: null,
        videos: null,
        order: 5,
        isPublished: true
      }
    ]

    // Ins√©rer le contenu d'exemple
    for (const item of sampleContent) {
      try {
        const [result] = await connection.execute(
          'INSERT INTO AboutContent (id, type, title, content, images, videos, `order`, isPublished) VALUES (?, ?, ?, ?, ?, ?, ?, ?)',
          [item.id, item.type, item.title, item.content, item.images, item.videos, item.order, item.isPublished]
        )
        console.log(`‚úÖ Contenu ajout√©: ${item.title}`)
      } catch (error) {
        if (error.code === 'ER_DUP_ENTRY') {
          console.log(`‚ö†Ô∏è Le contenu existe d√©j√†: ${item.title}`)
        } else {
          console.error(`‚ùå Erreur lors de l'ajout de "${item.title}":`, error.message)
        }
      }
    }

    console.log('\nüéâ Ajout du contenu d\'exemple termin√© !')
    
    // V√©rifier le contenu ajout√©
    const [content] = await connection.execute('SELECT * FROM AboutContent ORDER BY `order`')
    console.log(`\nüìä Total du contenu dans la base: ${content.length} √©l√©ments`)
    
    content.forEach(item => {
      console.log(`- ${item.title} (${item.type}) - Ordre: ${item.order}`)
    })

  } catch (error) {
    console.error('‚ùå Erreur:', error)
  } finally {
    if (connection) {
      await connection.end()
      console.log('\nüîå Connexion √† la base de donn√©es ferm√©e')
    }
  }
}

if (require.main === module) {
  addSampleAboutContent()
}

module.exports = addSampleAboutContent




