// Script d'initialisation de base de donn√©es pour la production
const mysql = require('mysql2/promise');
const fs = require('fs');
const path = require('path');

// Configuration de base de donn√©es pour la production
const getDbConfig = () => {
  // En production Vercel, utiliser les variables d'environnement
  if (process.env.VERCEL === 'true') {
    return {
      host: process.env.DB_HOST || 'localhost',
      user: process.env.DB_USER || 'root',
      password: process.env.DB_PASSWORD || '',
      database: process.env.DB_NAME || 'association_el_bsf',
      port: parseInt(process.env.DB_PORT) || 3306
    };
  }
  
  // En local, utiliser la configuration locale
  return {
    host: 'localhost',
    user: 'root',
    password: 'Hadouachi20@',
    database: 'association_el_bsf',
    port: 3306
  };
};

async function initDatabase() {
  let connection;
  
  try {
    console.log('üîÑ Initialisation de la base de donn√©es...');
    
    // En production Vercel, ne pas essayer de se connecter √† MySQL
    if (process.env.VERCEL === 'true') {
      console.log('‚úÖ Mode production Vercel - Pas de connexion MySQL n√©cessaire');
      console.log('‚úÖ Les donn√©es statiques seront utilis√©es');
      return;
    }
    
    // En local, essayer de se connecter
    const dbConfig = getDbConfig();
    console.log('üîó Tentative de connexion √† la base de donn√©es locale...');
    
    connection = await mysql.createConnection(dbConfig);
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie');
    
    // V√©rifier que les tables existent
    const [tables] = await connection.execute('SHOW TABLES');
    console.log(`‚úÖ ${tables.length} tables trouv√©es`);
    
  } catch (error) {
    console.log('‚ö†Ô∏è Impossible de se connecter √† la base de donn√©es:', error.message);
    console.log('‚úÖ Mode fallback activ√© - Les donn√©es statiques seront utilis√©es');
  } finally {
    if (connection) {
      await connection.end();
    }
  }
}

// Ex√©cuter seulement si ce script est appel√© directement
if (require.main === module) {
  initDatabase();
}

module.exports = { initDatabase };
